@<-functionfunctionmethodsobject	name	value
addNextMethodfunctionfunctionmethodsmethod	f"<unknown>"	mlist	optionalFALSE	envir
allGenericsfunctionfunctionmethods...
allNamesfunctionfunctionmethodsx
Arithfunctionfunctionmethodse1	e2
asfunctionfunctionmethodsobject	Class	strictTRUE	extpossibleExtends(thisClass, Class)
as<-functionfunctionmethodsobject	Class	value
asMethodDefinitionfunctionfunctionmethodsdef	signaturelist(.anyClassName)	sealedFALSE	fdef
assignClassDeffunctionfunctionmethodsClass	def	where	forceFALSE
assignMethodsMetaDatafunctionfunctionmethodsf	value	fdef	where	deflt
balanceMethodsListfunctionfunctionmethodsmlist	args	checkTRUE
body<-functionfunctionmethodsfun	envirenvironment(fun)	value
cacheGenericsMetaDatafunctionfunctionmethodsf	fdef	attachTRUE	wheretopenv(parent.frame())	package	methods
cacheMetaDatafunctionfunctionmethodswhere	attachTRUE	searchWhereas.environment(where)	doCheckTRUE
cacheMethodfunctionfunctionmethodsf	sig	def	argsnames(sig)	fdef	inheritedFALSE
callGenericfunctionfunctionmethods...
callNextMethodfunctionfunctionmethods...
canCoercefunctionfunctionmethodsobject	Class
cbind2functionfunctionmethodsx	y	...
checkSlotAssignmentfunctionfunctionmethodsobj	name	value
classesToAMfunctionfunctionmethodsclasses	includeSubclassesFALSE	abbreviate2
classLabelfunctionfunctionmethodsClass
classMetaNamefunctionfunctionmethodsname
classNamefunctionfunctionmethodsclass	package
coercefunctionfunctionmethodsfrom	to	strictTRUE
coerce<-functionfunctionmethodsfrom	to	value
Comparefunctionfunctionmethodse1	e2
completeClassDefinitionfunctionfunctionmethodsClass	ClassDefgetClassDef(Class)	where	doExtendsTRUE
completeExtendsfunctionfunctionmethodsClassDef	class2	extensionDef	where
completeSubclassesfunctionfunctionmethodsclassDef	class2	extensionDef	where	classDef2getClassDef(class2, where)
Complexfunctionfunctionmethodsz
conformMethodfunctionfunctionmethodssignature	mnames	fnames	f"<unspecified>"	fdef	method
defaultDumpNamefunctionfunctionmethodsgeneric	signature
defaultPrototypefunctionfunctionmethodsNO_ARGS
doPrimitiveMethodfunctionfunctionmethodsname	def	callsys.call(sys.parent())	evsys.frame(sys.parent(2))
dumpMethodfunctionfunctionmethodsf	signaturecharacter()	filedefaultDumpName(f, signature)	wheretopenv(parent.frame())	defgetMethod(f, signature, where = where, optional = TRUE)
dumpMethodsfunctionfunctionmethodsf	file""	signatureNULL	methodsfindMethods(f, where = where)	wheretopenv(parent.frame())
elfunctionfunctionmethodsobject	where
el<-functionfunctionmethodsNO_ARGS
elNamedfunctionfunctionmethodsx	name	mustFindFALSE
elNamed<-functionfunctionmethodsx	name	value
empty.dumpfunctionfunctionmethodsNO_ARGS
emptyMethodsListfunctionfunctionmethodsmlist	thisClass"ANY"	sublistlist()
evalOnLoadfunctionfunctionmethodsexpr	wheretopenv(parent.frame())	aname""
evalqOnLoadfunctionfunctionmethodsexpr	wheretopenv(parent.frame())	aname""
evalSourcefunctionfunctionmethodssource	package""	lockTRUE	cacheFALSE
existsFunctionfunctionfunctionmethodsf	genericTRUE	wheretopenv(parent.frame())
existsMethodfunctionfunctionmethodsf	signaturecharacter()	wheretopenv(parent.frame())
extendsfunctionfunctionmethodsclass1	class2	maybeTRUE	fullInfoFALSE
finalDefaultMethodfunctionfunctionmethodsmethod
findClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())	unique""
findFunctionfunctionfunctionmethodsf	genericTRUE	wheretopenv(parent.frame())
findMethodfunctionfunctionmethodsf	signature	wheretopenv(parent.frame())
findMethodsfunctionfunctionmethodsf	where	classescharacter()	inheritedFALSE	package""
findMethodSignaturesfunctionfunctionmethods...	targetTRUE	methodsfindMethods(...)
findUniquefunctionfunctionmethodswhat	message	wheretopenv(parent.frame())
fixPre1.8functionfunctionmethodsnames	wheretopenv(parent.frame())
formalArgsfunctionfunctionmethodsdef
functionBodyfunctionfunctionmethodsfunsys.function(sys.parent())
functionBody<-functionfunctionmethodsfun	envirenvironment(fun)	value
generic.skeletonfunctionfunctionmethodsname	fdef	fdefault
getAccessfunctionfunctionmethodsClassDef
getAllMethodsfunctionfunctionmethodsf	fdef	wheretopenv(parent.frame())
getAllSuperClassesfunctionfunctionmethodsClassDef	simpleOnlyTRUE
getClassfunctionfunctionmethodsClass	.ForceFALSE	where.classEnv(Class, topenv(parent.frame()), FALSE)
getClassDeffunctionfunctionmethodsClass	wheretopenv(parent.frame())	packagepackageSlot(Class)	inheritsTRUE
getClassesfunctionfunctionmethodswhere.externalCallerEnv()	inheritsmissing(where)
getClassNamefunctionfunctionmethodsClassDef
getClassPackagefunctionfunctionmethodsClassDef
getDataPartfunctionfunctionmethodsobject
getExtendsfunctionfunctionmethodsClassDef
getFunctionfunctionfunctionmethodsname	genericTRUE	mustFindTRUE	wheretopenv(parent.frame())
getGenericfunctionfunctionmethodsf	mustFindFALSE	where	package""
getGenericsfunctionfunctionmethodswhere	searchFormFALSE
getGroupfunctionfunctionmethodsfdef	recursiveFALSE	wheretopenv(parent.frame())
getGroupMembersfunctionfunctionmethodsgroup	recursiveFALSE	characterTRUE
getLoadActionsfunctionfunctionmethodswheretopenv(parent.frame())
getMethodfunctionfunctionmethodsf	signaturecharacter()	wheretopenv(parent.frame())	optionalFALSE	mlist	fdef
getMethodsfunctionfunctionmethodsf	wheretopenv(parent.frame())	tableFALSE
getMethodsForDispatchfunctionfunctionmethodsfdef	inheritedFALSE
getMethodsMetaDatafunctionfunctionmethodsf	wheretopenv(parent.frame())
getPackageNamefunctionfunctionmethodswheretopenv(parent.frame())	createTRUE
getPropertiesfunctionfunctionmethodsClassDef
getPrototypefunctionfunctionmethodsClassDef
getRefClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())
getSlotsfunctionfunctionmethodsx
getSubclassesfunctionfunctionmethodsClassDef
getValidityfunctionfunctionmethodsClassDef
getVirtualfunctionfunctionmethodsClassDef
hasArgfunctionfunctionmethodsname
hasLoadActionfunctionfunctionmethodsaname	wheretopenv(parent.frame())
hasMethodfunctionfunctionmethodsf	signaturecharacter()	where.genEnv(f, topenv(parent.frame()))
hasMethodsfunctionfunctionmethodsf	where	package""
implicitGenericfunctionfunctionmethodsname	wheretopenv(parent.frame())	genericgetGeneric(name, where = where)
inheritedSlotNamesfunctionfunctionmethodsClass	wheretopenv(parent.frame())
initFieldArgsfunctionfunctionmethods.Object	classDef	selfEnv	...
initializefunctionfunctionmethods.Object	...
initRefFieldsfunctionfunctionmethods.Object	classDef	selfEnv	args
insertClassMethodsfunctionfunctionmethodsmethods	Class	value	fieldNames	returnAll
insertMethodfunctionfunctionmethodsmlist	signature	args	def	cacheOnlyFALSE
insertSourcefunctionfunctionmethodssource	package""	functionsallPlainObjects()	methods(if (missing(functions)) allMethodTables() else NULL)	forcemissing(functions) & missing(methods)
isfunctionfunctionmethodsobject	class2
isClassfunctionfunctionmethodsClass	formalTRUE	wheretopenv(parent.frame())
isClassDeffunctionfunctionmethodsobject
isClassUnionfunctionfunctionmethodsClass
isGenericfunctionfunctionmethodsf	wheretopenv(parent.frame())	fdefNULL	getNameFALSE
isGrammarSymbolfunctionfunctionmethodssymbol
isGroupfunctionfunctionmethodsf	wheretopenv(parent.frame())	fdefgetGeneric(f, where = where)
isSealedClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())
isSealedMethodfunctionfunctionmethodsf	signature	fdefgetGeneric(f, FALSE, where = where)	wheretopenv(parent.frame())
isVirtualClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())
isXS3ClassfunctionfunctionmethodsclassDef
kroneckerfunctionfunctionmethodsX	Y	FUN"*"	make.dimnamesFALSE	...
languageElfunctionfunctionmethodsobject	which
languageEl<-functionfunctionmethodsobject	which	value
linearizeMlistfunctionfunctionmethodsmlist	inheritedTRUE
listFromMethodsfunctionfunctionmethodsgeneric	where	table
listFromMlistfunctionfunctionmethodsmlist	prefixlist()	sigs.TRUE	methods.TRUE
loadMethodfunctionfunctionmethodsmethod	fname	envir
Logicfunctionfunctionmethodse1	e2
makeClassRepresentationfunctionfunctionmethodsname	slotslist()	superClassescharacter()	prototypeNULL	package	validityNULL	accesslist()	version.newExternalptr()	sealedFALSE	virtualNA	where
makeExtendsfunctionfunctionmethodsClass	to	coerceNULL	testNULL	replaceNULL	bycharacter()	package	slotsgetSlots(classDef1)	classDef1getClass(Class)	classDef2
makeGenericfunctionfunctionmethodsf	fdef	fdefault	grouplist()	valueClasscharacter()	packagegetPackageName(environment(fdef))	signatureNULL	genericFunctionNULL	simpleInheritanceOnlyNULL
makeMethodsListfunctionfunctionmethodsobject	level1
makePrototypeFromClassDeffunctionfunctionmethodsslots	ClassDef	extends	where
makeStandardGenericfunctionfunctionmethodsf	fdef
matchSignaturefunctionfunctionmethodssignature	fun	wherebaseenv()
Mathfunctionfunctionmethodsx
Math2functionfunctionmethodsx	digits
mergeMethodsfunctionfunctionmethodsm1	m2	genericLabelcharacter()
metaNameUndofunctionfunctionmethodsstrings	prefix	searchFormFALSE
MethodAddCoercefunctionfunctionmethodsmethod	argName	thisClass	methodClass
methodSignatureMatrixfunctionfunctionmethodsobject	sigSlotsc("target", "defined")
method.skeletonfunctionfunctionmethodsgeneric	signature	file	externalFALSE	wheretopenv(parent.frame())
MethodsListfunctionfunctionmethods.ArgName	...
MethodsListSelectfunctionfunctionmethodsf	env	mlistNULL	fEnvif (is(fdef, "genericFunction")) environment(fdef) else baseenv()	finalDefaultfinalDefaultMethod(mlist)	evalArgsTRUE	useInheritedTRUE	fdefgetGeneric(f, where = env)	resetAllowedTRUE
methodsPackageMetaNamefunctionfunctionmethodsprefix	name	package""
missingArgfunctionfunctionmethodssymbol	envirparent.frame()	evalFALSE
mlistMetaNamefunctionfunctionmethodsname""	package""
multipleClassesfunctionfunctionmethodsdetailsFALSE
newfunctionfunctionmethodsClass	...
newBasicfunctionfunctionmethodsClass	...
newClassRepresentationfunctionfunctionmethods...
newEmptyObjectfunctionfunctionmethodsNO_ARGS
Opsfunctionfunctionmethodse1	e2
packageSlotfunctionfunctionmethodsobject
packageSlot<-functionfunctionmethodsobject	value
possibleExtendsfunctionfunctionmethodsclass1	class2	ClassDef1getClassDef(class1)	ClassDef2getClassDef(class2, where = .classEnv(ClassDef1))
prohibitGenericfunctionfunctionmethodsname	wheretopenv(parent.frame())
promptClassfunctionfunctionmethodsclName	filenameNULL	type"class"	keywords"classes"	wheretopenv(parent.frame())	generatorName
promptMethodsfunctionfunctionmethodsf	filenameNULL	methods
prototypefunctionfunctionmethods...
QuotefunctionfunctionmethodsNO_ARGS
rbind2functionfunctionmethodsx	y	...
reconcilePropertiesAndPrototypefunctionfunctionmethodsname	properties	prototype	superClasses	where
registerImplicitGenericsfunctionfunctionmethodswhat.ImplicitGenericsTable(where)	wheretopenv(parent.frame())
rematchDefinitionfunctionfunctionmethodsdefinition	generic	mnames	fnames	signature
removeClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())
removeGenericfunctionfunctionmethodsf	wheretopenv(parent.frame())
removeMethodfunctionfunctionmethodsf	signaturecharacter()	wheretopenv(parent.frame())
removeMethodsfunctionfunctionmethodsf	wheretopenv(parent.frame())	allmissing(where)
removeMethodsObjectfunctionfunctionmethodsf	wheretopenv(parent.frame())
representationfunctionfunctionmethods...
requireMethodsfunctionfunctionmethodsfunctions	signature	message""	wheretopenv(parent.frame())
resetClassfunctionfunctionmethodsClass	classDef	where
resetGenericfunctionfunctionmethodsf	fdefgetGeneric(f, where = where)	mlistgetMethodsForDispatch(fdef)	wheretopenv(parent.frame())	defltfinalDefaultMethod(mlist)
S3Classfunctionfunctionmethodsobject
S3Class<-functionfunctionmethodsobject	value
S3Partfunctionfunctionmethodsobject	strictS3FALSE	S3Class
S3Part<-functionfunctionmethodsobject	strictS3FALSE	needClass.S3Class(object)	value
sealClassfunctionfunctionmethodsClass	wheretopenv(parent.frame())
seemsS4Objectfunctionfunctionmethodsobject
selectMethodfunctionfunctionmethodsf	signature	optionalFALSE	useInheritedTRUE	mlistif (!is.null(fdef)) getMethodsForDispatch(fdef)	fdefgetGeneric(f, !optional)	verboseFALSE	doCacheFALSE	returnAllFALSE
selectSuperClassesfunctionfunctionmethodsClass	dropVirtualFALSE	namesOnlyTRUE	directOnlyTRUE	simpleOnly	wheretopenv(parent.frame())
sessionDatafunctionfunctionmethodsNO_ARGS
setAsfunctionfunctionmethodsfrom	to	def	replaceNULL	wheretopenv(parent.frame())
setClassfunctionfunctionmethodsClass	representationlist()	prototypeNULL	containscharacter()	validityNULL	accesslist()	wheretopenv(parent.frame())	version.newExternalptr()	sealedFALSE	packagegetPackageName(where)	S3methodsFALSE
setClassUnionfunctionfunctionmethodsname	memberscharacter()	wheretopenv(parent.frame())
setDataPartfunctionfunctionmethodsobject	value	checkTRUE
setGenericfunctionfunctionmethodsname	defNULL	grouplist()	valueClasscharacter()	wheretopenv(parent.frame())	packageNULL	signatureNULL	useAsDefaultNULL	genericFunctionNULL	simpleInheritanceOnlyNULL
setGenericImplicitfunctionfunctionmethodsname	wheretopenv(parent.frame())	restoreTRUE
setGroupGenericfunctionfunctionmethodsname	defNULL	grouplist()	valueClasscharacter()	knownMemberslist()	packagegetPackageName(where)	wheretopenv(parent.frame())
setIsfunctionfunctionmethodsclass1	class2	testNULL	coerceNULL	replaceNULL	bycharacter()	wheretopenv(parent.frame())	classDefgetClass(class1, TRUE, where = where)	extensionObjectNULL	doCompleteTRUE
setLoadActionfunctionfunctionmethodsaction	aname""	wheretopenv(parent.frame())
setLoadActionsfunctionfunctionmethods...	.wheretopenv(parent.frame())
setMethodfunctionfunctionmethodsf	signaturecharacter()	definition	wheretopenv(parent.frame())	valueClassNULL	sealedFALSE
setOldClassfunctionfunctionmethodsClasses	prototypeNULL	wheretopenv(parent.frame())	testFALSE	S4Class
setPackageNamefunctionfunctionmethodspkg	env
setPrimitiveMethodsfunctionfunctionmethodsf	fdef	code	generic	mlistget(".Methods", envir = environment(generic))
setRefClassfunctionfunctionmethodsClass	fieldscharacter()	containscharacter()	methodslist()	wheretopenv(parent.frame())	...
setReplaceMethodfunctionfunctionmethodsf	...	wheretopenv(parent.frame())
setValidityfunctionfunctionmethodsClass	method	wheretopenv(parent.frame())
showfunctionfunctionmethodsobject
showClassfunctionfunctionmethodsClass	completeTRUE	propertiesAreCalled"Slots"
showDefaultfunctionfunctionmethodsobject	oldMethodsTRUE
showExtendsfunctionfunctionmethodsext	printTostdout()
showMethodsfunctionfunctionmethodsfcharacter()	wheretopenv(parent.frame())	classesNULL	includeDefsFALSE	inherited!includeDefs	showEmpty	printTostdout()	fdefgetGeneric(f, where = where)
showMlistfunctionfunctionmethodsmlist	includeDefsTRUE	inheritedTRUE	classesNULL	useArgNamesTRUE	printTostdout()
signaturefunctionfunctionmethods...
SignatureMethodfunctionfunctionmethodsnames	signature	definition
sigToEnvfunctionfunctionmethodssignature	generic
slotfunctionfunctionmethodsobject	name
slot<-functionfunctionmethodsobject	name	checkTRUE	value
slotNamesfunctionfunctionmethodsx
slotsFromS3functionfunctionmethodsobject
substituteDirectfunctionfunctionmethodsobject	frameparent.frame()	cleanFunctionTRUE
substituteFunctionArgsfunctionfunctionmethodsdef	newArgs	argsformalArgs(def)	silentFALSE	functionName"a function"
Summaryfunctionfunctionmethodsx	...	na.rmFALSE
superClassDepthfunctionfunctionmethodsClassDef	soFarClassDef@className	simpleOnlyTRUE
testInheritedMethodsfunctionfunctionmethodsf	signatures	testTRUE	virtualFALSE	groupMethodsTRUE	where
testVirtualfunctionfunctionmethodsproperties	extends	prototype	where
traceOfffunctionfunctionmethodswhat
traceOnfunctionfunctionmethodswhat	tracer	exitNULL
tryNewfunctionfunctionmethodsClass	where
trySilentfunctionfunctionmethodsexpr
unRematchDefinitionfunctionfunctionmethodsdefinition
validObjectfunctionfunctionmethodsobject	testFALSE	completeFALSE
validSlotNamesfunctionfunctionmethodsnames
